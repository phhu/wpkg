<?xml version="1.0" encoding="UTF-8"?>

<packages:packages xmlns:packages="http://www.wpkg.org/packages"
	xmlns:wpkg="http://www.wpkg.org/wpkg" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.wpkg.org/packages ../xsd/packages.xsd">

 	<package
        id="chocolatey"
        name="Chocolatey"
        revision="1.%version%"
        reboot="false"
        priority="1">
		
		<variable name="version" value="0.10.5.0" />

		<check type="file" condition="exists" path='%programdata%\chocolatey\bin\chocolatey.exe' value="%version%" />
		
		<variable name="installerPath" value="chocolatey\install.ps1"/>
		<variable name="installerURL" value="https://chocolatey.org/install.ps1" />

		<!-- conditional download -->
		<install cmd='"%DOWNLOADERPATH%" "%installerURL%"	"%software%\%installerPath%"  >NUL'>
			<condition><check type="logical" condition="not"><check type="file" condition="exists" path="%SOFTWARE%\%installerPath%" /></check></condition>
		</install>		
		
		<install cmd='powershell "%SOFTWARE%\%installerPath%"'  /> 
		 
		<upgrade include="install" />

		<remove cmd='cmd /c rmdir /s /q "%programdata%\chocolatey\"' /> 

  	</package>	
	
	<package
        id="chocobasic"
        name="Basic packages (using Chocolatey)"
        revision="1"
        reboot="false"
        priority="1">

		<depends package-id="chocolatey" /> 
	
		<!-- can use more than one:
			<variable name="PKGNAMES" value="vlc firefox nssm" />
		-->	
		<variable name="PKGNAMES" value="classic-shell notepadplusplus git googlechrome 7zip" />
		
		<check path='Classic Shell' 	value='4.3.0' 			type='uninstall' condition='versiongreaterorequal' />
		<check path='Git version .*' 	value='2.13.2' 			type='uninstall' condition='versiongreaterorequal' />
		<check path='Google Chrome' 	value='61.0.3163.100' 	type='uninstall' condition='versiongreaterorequal' />
		<check path='7-Zip .*' 			value='16.04' 			type='uninstall' condition='versiongreaterorequal' />
		<check path='Notepad\+\+.*' 	value='7.5.1' 			type='uninstall' condition='versiongreaterorequal' />
	    <!--
		Or use choco list in a .cmd file like this:
			choco list - -localonly | findstr /ib /c:%1
			exit %ERRORLEVEL%
		<check type="execute" path='chocotest.cmd "%PKGNAME%"' condition="exitcodeequalto" value="0"/>		
		-->
		
		<install cmd='%COMSPEC% /c "%programdata%\chocolatey\bin\chocolatey.exe" upgrade %PKGNAMES% -y &gt;&gt;C:\ProgramData\chocolatey\logs\wpkgchocoinstall.log'  /> 
		<upgrade include="install" />
		<remove  cmd='%COMSPEC% /c "%programdata%\chocolatey\bin\chocolatey.exe" uninstall %PKGNAMES% -y &gt;&gt;C:\ProgramData\chocolatey\logs\wpkgchocoinstall.log'/>
		
		<!--
		<install cmd='cmd /c %programdata%\chocolatey\bin\chocolatey.exe install %PKGNAME% -y'  /> 
		<install cmd='%COMSPEC% /c choco install %PKGNAME% -y - -forceX86 - -force' architecture="x64" /> 
		-->
		<!-- 
		Can be useful to pipe chocolatey output to log file: e.g. &gt;c:\temp\choc.log 
		or see C:\ProgramData\chocolatey\logs\chocolatey.log
		-->
  	</package>	

	
</packages:packages>
